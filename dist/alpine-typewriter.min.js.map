{"version":3,"file":"alpine-typewriter.min.js","sources":["../src/index.js","../builds/cdn.js"],"sourcesContent":["class Typewriter {\n    constructor(element, texts, waitTime) {\n        this.element = element;\n        this.texts = texts || [];\n        this.current = 1;\n        this.waitTime = waitTime || 2000;\n    }\n\n    async start() {\n        this.element.innerText = this.texts[0] || '';\n        this.increment();\n        while (true) {\n            await this.swap();\n        }\n    }\n\n    async swap() {\n        await this.wait(this.waitTime);\n        await this.clear();\n        await this.type(this.nextText());\n    }\n\n    increment() {\n        this.current++;\n        if (this.current > this.texts.length) {\n            this.current = 1;\n        }\n    }\n\n    nextText() {\n        let text = this.texts[this.current - 1];\n        this.increment();\n        return text;\n    }\n\n    text() {\n        return this.element.innerText;\n    }\n\n    length() {\n        return this.text().length;\n    }\n\n    append(text) {\n        this.element.innerText += text;\n\n        return this.wait(100);\n    }\n\n    backspace() {\n        this.element.innerText = this.text().slice(0, -1);\n\n        return this.wait(100);\n    }\n\n    async clear() {\n        while (this.length()) {\n            await this.backspace();\n        }\n    }\n\n    async type(text) {\n        while (text.length) {\n            await this.append(text[0]);\n\n            text = text.substring(1);\n        }\n    }\n\n    async wait(milliseconds) {\n        return new Promise((resolve) => {\n            setTimeout(resolve, milliseconds);\n        })\n    }\n}\n\nexport default function (Alpine) {\n    Alpine.directive('typewriter', (el, { expression, modifiers }, { evaluate }) => {\n        const texts = evaluate(expression);\n\n        const timeModifiers = modifiers.filter((modifier) => modifier.match(/^\\d+m?s$/));\n        const latestTimeModifier = timeModifiers.pop();\n        let milliseconds = null;\n        if (latestTimeModifier) {\n            if (latestTimeModifier.endsWith('ms')) {\n                milliseconds = parseInt(latestTimeModifier.match(/^(\\d+)/)[1]);\n            } else {\n                milliseconds = parseInt(latestTimeModifier.match(/^(\\d+)s/)[1]) * 1000;\n            }\n        }\n\n        new Typewriter(el, texts, milliseconds).start();\n    });\n}\n","import Typewriter from '../src/index.js';\n\ndocument.addEventListener('alpine:init', () => {\n    Typewriter(window.Alpine);\n});\n"],"names":["Typewriter","constructor","element","texts","waitTime","this","current","async","innerText","increment","swap","wait","clear","type","nextText","length","text","append","backspace","slice","substring","milliseconds","Promise","resolve","setTimeout","document","addEventListener","window","Alpine","directive","el","expression","modifiers","evaluate","latestTimeModifier","filter","modifier","match","pop","endsWith","parseInt","start"],"mappings":"2FAAA,MAAMA,EACFC,YAAYC,EAASC,EAAOC,GACxBC,KAAKH,QAAUA,EACfG,KAAKF,MAAQA,GAAS,GACtBE,KAAKC,QAAU,EACfD,KAAKD,SAAWA,GAAY,GAC/B,CAEUG,cAGP,IAFAF,KAAKH,QAAQM,UAAYH,KAAKF,MAAM,IAAM,GAC1CE,KAAKI,oBAEKJ,KAAKK,MAElB,CAESH,mBACAF,KAAKM,KAAKN,KAAKD,gBACfC,KAAKO,cACLP,KAAKQ,KAAKR,KAAKS,WACxB,CAEDL,YACIJ,KAAKC,UACDD,KAAKC,QAAUD,KAAKF,MAAMY,SAC1BV,KAAKC,QAAU,EAEtB,CAEDQ,WACI,IAAIE,EAAOX,KAAKF,MAAME,KAAKC,QAAU,GAErC,OADAD,KAAKI,YACEO,CACV,CAEDA,OACI,OAAOX,KAAKH,QAAQM,SACvB,CAEDO,SACI,OAAOV,KAAKW,OAAOD,MACtB,CAEDE,OAAOD,GAGH,OAFAX,KAAKH,QAAQM,WAAaQ,EAEnBX,KAAKM,KAAK,IACpB,CAEDO,YAGI,OAFAb,KAAKH,QAAQM,UAAYH,KAAKW,OAAOG,MAAM,GAAI,GAExCd,KAAKM,KAAK,IACpB,CAEUJ,cACP,KAAOF,KAAKU,gBACFV,KAAKa,WAElB,CAESX,WAACS,GACP,KAAOA,EAAKD,cACFV,KAAKY,OAAOD,EAAK,IAEvBA,EAAOA,EAAKI,UAAU,EAE7B,CAESb,WAACc,GACP,OAAO,IAAIC,SAASC,IAChBC,WAAWD,EAASF,EAApB,GAEP,ECvELI,SAASC,iBAAiB,eAAe,KAC1BC,OAAOC,OD0EXC,UAAU,cAAc,CAACC,GAAMC,aAAYC,cAAeC,eAC7D,MAAM9B,EAAQ8B,EAASF,GAGjBG,EADgBF,EAAUG,QAAQC,GAAaA,EAASC,MAAM,cAC3BC,MACzC,IAAIjB,EAAe,KACfa,IAEIb,EADAa,EAAmBK,SAAS,MACbC,SAASN,EAAmBG,MAAM,UAAU,IAEO,IAAnDG,SAASN,EAAmBG,MAAM,WAAW,KAIpE,IAAIrC,EAAW8B,EAAI3B,EAAOkB,GAAcoB,OAAxC,GCxFJ"}