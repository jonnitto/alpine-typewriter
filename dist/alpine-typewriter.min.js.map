{"version":3,"file":"alpine-typewriter.min.js","sources":["../src/index.js","../builds/cdn.js"],"sourcesContent":["class Typewriter {\n    constructor(element, texts, waitTime, showCursor) {\n        this.element = element;\n        this.texts = texts || [];\n        this.current = 1;\n        this.currentText = '';\n        this.waitTime = waitTime || 2000;\n        this.showCursor = showCursor || false;\n        this.cursor = true;\n    }\n\n    async start() {\n        this.currentText = this.texts[0] || '';\n        this.element.innerHTML = this.prepareText(true);\n        this.increment();\n        while (true) {\n            await this.swap();\n        }\n    }\n\n    prepareText(cursor) {\n        return `${this.currentText}${\n            cursor ? this.getCursor() : ''\n        }${this.getPlaceholder()}`;\n    }\n\n    getCursor() {\n        return this.showCursor\n            ? '<span style=\"position:relative;\"><span style=\"position:absolute;top:0.05em;bottom:0.05em;border-left:0.05em solid currentColor;\"></span></span>'\n            : '';\n    }\n\n    getPlaceholder() {\n        return '<span style=\"position:relative;display:inline-block;height:1em;\"></span>';\n    }\n\n    async swap() {\n        await this.wait(this.waitTime);\n        await this.clear();\n        await this.type(this.nextText());\n    }\n\n    increment() {\n        this.current++;\n        if (this.current > this.texts.length) {\n            this.current = 1;\n        }\n    }\n\n    nextText() {\n        let text = this.texts[this.current - 1];\n        this.increment();\n        return text;\n    }\n\n    text() {\n        return this.currentText;\n    }\n\n    length() {\n        return this.text().length;\n    }\n\n    append(text) {\n        this.currentText += text;\n        this.element.innerHTML = this.prepareText(true);\n\n        return this.wait(100);\n    }\n\n    backspace() {\n        this.currentText = this.text().slice(0, -1);\n        this.element.innerHTML = this.prepareText(true);\n\n        return this.wait(100);\n    }\n\n    async clear() {\n        while (this.length()) {\n            await this.backspace();\n        }\n    }\n\n    async type(text) {\n        while (text.length) {\n            await this.append(text[0]);\n\n            text = text.substring(1);\n        }\n    }\n\n    async wait(milliseconds) {\n        this.cursor = true;\n        const interval = setInterval(() => {\n            this.cursor = !this.cursor;\n            if (this.cursor) {\n                this.element.innerHTML = this.prepareText(true);\n            } else {\n                this.element.innerHTML = this.prepareText(false);\n            }\n        }, 530);\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                clearInterval(interval);\n                resolve();\n            }, milliseconds);\n        });\n    }\n}\n\nexport default function (Alpine) {\n    Alpine.directive(\n        'typewriter',\n        (el, { expression, modifiers }, { evaluate }) => {\n            const texts = evaluate(expression);\n\n            const timeModifiers = modifiers.filter((modifier) =>\n                modifier.match(/^\\d+m?s$/),\n            );\n            const latestTimeModifier = timeModifiers.pop();\n            let milliseconds = null;\n            if (latestTimeModifier) {\n                if (latestTimeModifier.endsWith('ms')) {\n                    milliseconds = parseInt(\n                        latestTimeModifier.match(/^(\\d+)/)[1],\n                    );\n                } else {\n                    milliseconds =\n                        parseInt(latestTimeModifier.match(/^(\\d+)s/)[1]) * 1000;\n                }\n            }\n\n            const showCursor = modifiers.includes('cursor');\n\n            new Typewriter(el, texts, milliseconds, showCursor).start().then();\n        },\n    );\n}\n","import Typewriter from '../src/index.js';\n\ndocument.addEventListener('alpine:init', () => {\n    Typewriter(window.Alpine);\n});\n"],"names":["Typewriter","constructor","element","texts","waitTime","showCursor","this","current","currentText","cursor","async","innerHTML","prepareText","increment","swap","getCursor","getPlaceholder","wait","clear","type","nextText","length","text","append","backspace","slice","substring","milliseconds","interval","setInterval","Promise","resolve","setTimeout","clearInterval","document","addEventListener","window","Alpine","directive","el","expression","modifiers","evaluate","latestTimeModifier","filter","modifier","match","pop","endsWith","parseInt","includes","start","then"],"mappings":"2FAAA,MAAMA,EACFC,YAAYC,EAASC,EAAOC,EAAUC,GAClCC,KAAKJ,QAAUA,EACfI,KAAKH,MAAQA,GAAS,GACtBG,KAAKC,QAAU,EACfD,KAAKE,YAAc,GACnBF,KAAKF,SAAWA,GAAY,IAC5BE,KAAKD,WAAaA,IAAc,EAChCC,KAAKG,QAAS,CACjB,CAEUC,cAIP,IAHAJ,KAAKE,YAAcF,KAAKH,MAAM,IAAM,GACpCG,KAAKJ,QAAQS,UAAYL,KAAKM,aAAY,GAC1CN,KAAKO,oBAEKP,KAAKQ,MAElB,CAEDF,YAAYH,GACR,MAAQ,GAAEH,KAAKE,cACXC,EAASH,KAAKS,YAAc,KAC7BT,KAAKU,kBACX,CAEDD,YACI,OAAOT,KAAKD,WACN,kJACA,EACT,CAEDW,iBACI,MAAO,0EACV,CAESN,mBACAJ,KAAKW,KAAKX,KAAKF,gBACfE,KAAKY,cACLZ,KAAKa,KAAKb,KAAKc,WACxB,CAEDP,YACIP,KAAKC,UACDD,KAAKC,QAAUD,KAAKH,MAAMkB,SAC1Bf,KAAKC,QAAU,EAEtB,CAEDa,WACI,IAAIE,EAAOhB,KAAKH,MAAMG,KAAKC,QAAU,GAErC,OADAD,KAAKO,YACES,CACV,CAEDA,OACI,OAAOhB,KAAKE,WACf,CAEDa,SACI,OAAOf,KAAKgB,OAAOD,MACtB,CAEDE,OAAOD,GAIH,OAHAhB,KAAKE,aAAec,EACpBhB,KAAKJ,QAAQS,UAAYL,KAAKM,aAAY,GAEnCN,KAAKW,KAAK,IACpB,CAEDO,YAII,OAHAlB,KAAKE,YAAcF,KAAKgB,OAAOG,MAAM,GAAI,GACzCnB,KAAKJ,QAAQS,UAAYL,KAAKM,aAAY,GAEnCN,KAAKW,KAAK,IACpB,CAEUP,cACP,KAAOJ,KAAKe,gBACFf,KAAKkB,WAElB,CAESd,WAACY,GACP,KAAOA,EAAKD,cACFf,KAAKiB,OAAOD,EAAK,IAEvBA,EAAOA,EAAKI,UAAU,EAE7B,CAEShB,WAACiB,GACPrB,KAAKG,QAAS,EACd,MAAMmB,EAAWC,aAAY,KACzBvB,KAAKG,QAAUH,KAAKG,OAChBH,KAAKG,OACLH,KAAKJ,QAAQS,UAAYL,KAAKM,aAAY,GAE1CN,KAAKJ,QAAQS,UAAYL,KAAKM,aAAY,EAC7C,GACF,KACH,OAAO,IAAIkB,SAASC,IAChBC,YAAW,KACPC,cAAcL,GACdG,GAAO,GACRJ,EAHH,GAKP,ECzGLO,SAASC,iBAAiB,eAAe,KAC1BC,OAAOC,OD4GXC,UACH,cACA,CAACC,GAAMC,aAAYC,cAAeC,eAC9B,MAAMvC,EAAQuC,EAASF,GAKjBG,EAHgBF,EAAUG,QAAQC,GACpCA,EAASC,MAAM,cAEsBC,MACzC,IAAIpB,EAAe,KACfgB,IAEIhB,EADAgB,EAAmBK,SAAS,MACbC,SACXN,EAAmBG,MAAM,UAAU,IAIgB,IAAnDG,SAASN,EAAmBG,MAAM,WAAW,KAIzD,MAAMzC,EAAaoC,EAAUS,SAAS,UAEtC,IAAIlD,EAAWuC,EAAIpC,EAAOwB,EAActB,GAAY8C,QAAQC,MAA5D,GCnIR"}